{
    // scopes:
    //
    // source.php - comment - constant.other.class - entity.name - meta.catch - meta.function.arguments - meta.use - string - variable.other

    "scope": "source.php - comment - constant.other.class - entity.name - meta.catch - meta.function.arguments - meta.use - string - variable.other",
    "completions": [
        {"trigger":"__halt_compiler()\tLanguage Construct","contents":"__halt_compiler(${1})"},
        {"trigger":"abstract \tLanguage Construct","contents":"abstract "},
        {"trigger":"and \tLanguage Construct","contents":"and "},
        {"trigger":"array()\tLanguage Construct","contents":"array(${1})"},
        {"trigger":"as \tLanguage Construct","contents":"as "},
        {"trigger":"break\tLanguage Construct","contents":"break"},
        {"trigger":"callable \tLanguage Construct","contents":"callable "},
        {"trigger":"case\tLanguage Construct","contents":"case '${1}':"},
        {"trigger":"catch\tLanguage Construct","contents":"catch (${1})"},
        {"trigger":"class \tLanguage Construct","contents":"class "},
        {"trigger":"clone \tLanguage Construct","contents":"clone "},
        {"trigger":"const \tLanguage Construct","contents":"const "},
        {"trigger":"continue\tLanguage Construct","contents":"continue"},
        {"trigger":"declare()\tLanguage Construct","contents":"declare(${1})"},
        {"trigger":"default\tLanguage Construct","contents":"default:"},
        {"trigger":"die()\tLanguage Construct","contents":"die(${1})"},
        {"trigger":"do \tLanguage Construct","contents":"do "},
        {"trigger":"echo \tLanguage Construct","contents":"echo "},
        {"trigger":"else \tLanguage Construct","contents":"else "},
        {"trigger":"elseif\tLanguage Construct","contents":"elseif (${1})"},
        {"trigger":"empty()\tLanguage Construct","contents":"empty(${1})"},
        {"trigger":"enddeclare\tLanguage Construct","contents":"enddeclare;"},
        {"trigger":"endfor\tLanguage Construct","contents":"endfor;"},
        {"trigger":"endforeach\tLanguage Construct","contents":"endforeach;"},
        {"trigger":"endif\tLanguage Construct","contents":"endif;"},
        {"trigger":"endswitch\tLanguage Construct","contents":"endswitch;"},
        {"trigger":"endwhile\tLanguage Construct","contents":"endwhile;"},
        {"trigger":"eval()\tLanguage Construct","contents":"eval(${1})"},
        {"trigger":"exit()\tLanguage Construct","contents":"exit(${1})"},
        {"trigger":"extends \tLanguage Construct","contents":"extends "},
        {"trigger":"final \tLanguage Construct","contents":"final "},
        {"trigger":"finally\tLanguage Construct","contents":"finally {\n\t${1}\n}"},
        {"trigger":"for\tLanguage Construct","contents":"for (${1})"},
        {"trigger":"foreach\tLanguage Construct","contents":"foreach (${1})"},
        {"trigger":"function \tLanguage Construct","contents":"function "},
        {"trigger":"global \tLanguage Construct","contents":"global "},
        {"trigger":"goto \tLanguage Construct","contents":"goto "},
        {"trigger":"if\tLanguage Construct","contents":"if (${1})"},
        {"trigger":"implements \tLanguage Construct","contents":"implements "},
        {"trigger":"include\tLanguage Construct","contents":"include '${1}';"},
        {"trigger":"include_once\tLanguage Construct","contents":"include_once '${1}';"},
        {"trigger":"instanceof \tLanguage Construct","contents":"instanceof "},
        {"trigger":"insteadof \tLanguage Construct","contents":"insteadof "},
        {"trigger":"interface \tLanguage Construct","contents":"interface "},
        {"trigger":"isset()\tLanguage Construct","contents":"isset(${1})"},
        {"trigger":"list()\tLanguage Construct","contents":"list(${1})"},
        {"trigger":"namespace \tLanguage Construct","contents":"namespace "},
        {"trigger":"new \tLanguage Construct","contents":"new "},
        {"trigger":"or \tLanguage Construct","contents":"or "},
        {"trigger":"print \tLanguage Construct","contents":"print "},
        {"trigger":"private \tLanguage Construct","contents":"private "},
        {"trigger":"protected \tLanguage Construct","contents":"protected "},
        {"trigger":"public \tLanguage Construct","contents":"public "},
        {"trigger":"require\tLanguage Construct","contents":"require '${1}';"},
        {"trigger":"require_once\tLanguage Construct","contents":"require_once '${1}';"},
        {"trigger":"return \tLanguage Construct","contents":"return "},
        {"trigger":"static \tLanguage Construct","contents":"static "},
        {"trigger":"switch\tLanguage Construct","contents":"switch (${1})"},
        {"trigger":"throw \tLanguage Construct","contents":"throw "},
        {"trigger":"trait \tLanguage Construct","contents":"trait "},
        {"trigger":"try\tLanguage Construct","contents":"try {\n\t${1}\n}"},
        {"trigger":"unset()\tLanguage Construct","contents":"unset(${1})"},
        {"trigger":"use \tLanguage Construct","contents":"use "},
        {"trigger":"var \tLanguage Construct","contents":"var "},
        {"trigger":"while\tLanguage Construct","contents":"while (${1})"},
        {"trigger":"xor \tLanguage Construct","contents":"xor "},
        {"trigger":"yield \tLanguage Construct","contents":"yield "}
    ]
}
